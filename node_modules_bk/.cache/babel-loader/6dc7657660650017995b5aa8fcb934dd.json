{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Office/E-commerce/src/components/timer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Timer = ({\n  minute,\n  second\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialMinute = minute;\n  const initialSeconds = second;\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(myInterval);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  if (minute === 0 && seconds === 0) {\n    console.log(\"Counter end\"); // dispatch({\n    //   type: \"LOGOUT\",\n    // });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-sm text-gray-500\",\n      children: [\" \", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Timer, \"gtc7NS6UrTT752gKOj6q7MGwLG8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/vaibhav/Desktop/Office/E-commerce/src/components/timer.js"],"names":["React","useState","useEffect","useDispatch","Timer","minute","second","dispatch","initialMinute","initialSeconds","minutes","setMinutes","seconds","setSeconds","myInterval","setInterval","clearInterval","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AACpC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,aAAa,GAAGH,MAAtB;AACA,QAAMI,cAAc,GAAGH,MAAvB;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACO,aAAD,CAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACQ,cAAD,CAAtC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAIH,OAAO,GAAG,CAAd,EAAiB;AACfC,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAIF,OAAO,KAAK,CAAhB,EAAmB;AACjBM,UAAAA,aAAa,CAACF,UAAD,CAAb;AACD,SAFD,MAEO;AACLH,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,UAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF;AACF,KAZ2B,EAYzB,IAZyB,CAA5B;AAaA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,UAAD,CAAb;AACD,KAFD;AAGD,GAjBQ,CAAT;;AAmBA,MAAIT,MAAM,KAAK,CAAX,IAAgBO,OAAO,KAAK,CAAhC,EAAmC;AACjCK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADiC,CAEjC;AACA;AACA;AACD;;AAED,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA,iBACG,GADH,EAEGR,OAFH,OAEaE,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3CD;;GAAMR,K;UACaD,W;;;KADbC,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst Timer = ({ minute, second }) => {\n  const dispatch = useDispatch();\n\n  const initialMinute = minute;\n  const initialSeconds = second;\n\n  const [minutes, setMinutes] = useState(initialMinute);\n  const [seconds, setSeconds] = useState(initialSeconds);\n\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n      if (seconds === 0) {\n        if (minutes === 0) {\n          clearInterval(myInterval);\n        } else {\n          setMinutes(minutes - 1);\n          setSeconds(59);\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  if (minute === 0 && seconds === 0) {\n    console.log(\"Counter end\");\n    // dispatch({\n    //   type: \"LOGOUT\",\n    // });\n  }\n\n  return (\n    <span>\n      <span className=\"text-sm text-gray-500\">\n        {\" \"}\n        {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      </span>\n    </span>\n  );\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}