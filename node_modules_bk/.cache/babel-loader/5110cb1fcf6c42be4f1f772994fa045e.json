{"ast":null,"code":"import { numberChange } from \"./upDown\";\nimport { AuthProvider } from \"./auth_provider\";\nimport { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //LOCAL STORAGE\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whiteList: [\"AuthProvider\"]\n};\nconst RootReducer = combineReducers({\n  numberChange,\n  AuthProvider\n});\nexport default persistReducer(persistConfig, RootReducer); // import { numberChange } from \"./upDown\";\n// import { AuthProvider } from \"./auth_provider\";\n// import { combineReducers } from \"redux\";\n// const RootReducer = combineReducers({\n//   numberChange,\n//   AuthProvider,\n// });\n// export default RootReducer;\n//Reducers are functions that takes the current state and an actions as an argument and return a new state result.","map":{"version":3,"sources":["/Users/vaibhav/Desktop/Office/E-commerce/src/redux/reducers/index.js"],"names":["numberChange","AuthProvider","combineReducers","persistReducer","storage","persistConfig","key","whiteList","RootReducer"],"mappings":"AAAA,SAASA,YAAT,QAA6B,UAA7B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,cAAD;AAHS,CAAtB;AAMA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAClCF,EAAAA,YADkC;AAElCC,EAAAA;AAFkC,CAAD,CAAnC;AAKA,eAAeE,cAAc,CAACE,aAAD,EAAgBG,WAAhB,CAA7B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { numberChange } from \"./upDown\";\nimport { AuthProvider } from \"./auth_provider\";\nimport { combineReducers } from \"redux\";\n\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //LOCAL STORAGE\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whiteList: [\"AuthProvider\"],\n};\n\nconst RootReducer = combineReducers({\n  numberChange,\n  AuthProvider,\n});\n\nexport default persistReducer(persistConfig, RootReducer);\n\n// import { numberChange } from \"./upDown\";\n// import { AuthProvider } from \"./auth_provider\";\n// import { combineReducers } from \"redux\";\n\n// const RootReducer = combineReducers({\n//   numberChange,\n//   AuthProvider,\n// });\n\n// export default RootReducer;\n\n//Reducers are functions that takes the current state and an actions as an argument and return a new state result.\n"]},"metadata":{},"sourceType":"module"}