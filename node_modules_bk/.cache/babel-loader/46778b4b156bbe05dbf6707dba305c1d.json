{"ast":null,"code":"import{numberChange,counter}from\"./upDown\";import{AuthProvider}from\"./auth_provider\";import{combineReducers}from\"redux\";import{persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";//LOCAL STORAGE\nvar persistConfig={key:\"root\",storage:storage,whiteList:[\"AuthProvider\"]};var RootReducer=combineReducers({numberChange:numberChange,AuthProvider:AuthProvider,counter:counter});export default persistReducer(persistConfig,RootReducer);// import { numberChange } from \"./upDown\";\n// import { AuthProvider } from \"./auth_provider\";\n// import { combineReducers } from \"redux\";\n// const RootReducer = combineReducers({\n//   numberChange,\n//   AuthProvider,\n// });\n// export default RootReducer;\n//Reducers are functions that takes the current state and an actions as an argument and return a new state result.","map":{"version":3,"sources":["/Users/vaibhav/Desktop/Office/E-commerce/src/redux/reducers/index.js"],"names":["numberChange","counter","AuthProvider","combineReducers","persistReducer","storage","persistConfig","key","whiteList","RootReducer"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,OAAvB,KAAsC,UAAtC,CACA,OAASC,YAAT,KAA6B,iBAA7B,CACA,OAASC,eAAT,KAAgC,OAAhC,CAEA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAAiD;AAEjD,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBF,OAAO,CAAPA,OAFoB,CAGpBG,SAAS,CAAE,CAAC,cAAD,CAHS,CAAtB,CAMA,GAAMC,CAAAA,WAAW,CAAGN,eAAe,CAAC,CAClCH,YAAY,CAAZA,YADkC,CAElCE,YAAY,CAAZA,YAFkC,CAGlCD,OAAO,CAAPA,OAHkC,CAAD,CAAnC,CAMA,cAAeG,CAAAA,cAAc,CAACE,aAAD,CAAgBG,WAAhB,CAA7B,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { numberChange, counter } from \"./upDown\";\nimport { AuthProvider } from \"./auth_provider\";\nimport { combineReducers } from \"redux\";\n\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //LOCAL STORAGE\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whiteList: [\"AuthProvider\"],\n};\n\nconst RootReducer = combineReducers({\n  numberChange,\n  AuthProvider,\n  counter,\n});\n\nexport default persistReducer(persistConfig, RootReducer);\n\n// import { numberChange } from \"./upDown\";\n// import { AuthProvider } from \"./auth_provider\";\n// import { combineReducers } from \"redux\";\n\n// const RootReducer = combineReducers({\n//   numberChange,\n//   AuthProvider,\n// });\n\n// export default RootReducer;\n\n//Reducers are functions that takes the current state and an actions as an argument and return a new state result.\n"]},"metadata":{},"sourceType":"module"}