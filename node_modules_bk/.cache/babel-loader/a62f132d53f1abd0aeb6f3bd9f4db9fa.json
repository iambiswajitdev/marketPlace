{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Office/E-commerce/src/components/button2.js\";\nimport React from \"react\"; // import { ButtonVariants, ButtonSizes } from \"./../utils/prop-types\";\n\nimport { ButtonDisable, ButtonVariant, ButtonSize, ButtonBase2 } from \"./../utils/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultProps = {\n  //   variant: \"primary\" as ButtonVariants,\n  //   size: \"normal\" as ButtonSizes,\n  //   type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n  loading: false,\n  disabled: false\n};\n\nconst Button2 = ({\n  className,\n  loading,\n  variant,\n  size,\n  type,\n  children,\n  disabled,\n  onClick,\n  ...props\n}) => {\n  const classNames = ButtonBase2 + \" \" + (disabled === true ? ButtonDisable : ButtonVariant[variant]) + \" \" + ButtonSize[size] + \" \" + className;\n\n  const onClickHandler = event => {\n    if (disabled || loading) return;\n    onClick && onClick(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClickHandler,\n    className: classNames,\n    disabled: disabled,\n    type: type,\n    \"aria-label\": type,\n    ...props,\n    children: [!loading && children, loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-5 w-5 border-2 border-gray-400 border-t-2 rounded-full animate-spin\",\n      style: {\n        borderTopColor: \"#000101\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button2;\nButton2.defaultProps = defaultProps;\nexport default Button2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button2\");","map":{"version":3,"sources":["/Users/vaibhav/Desktop/Office/E-commerce/src/components/button2.js"],"names":["React","ButtonDisable","ButtonVariant","ButtonSize","ButtonBase2","defaultProps","loading","disabled","Button2","className","variant","size","type","children","onClick","props","classNames","onClickHandler","event","borderTopColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,WAJF,QAKO,kBALP;;AAOA,MAAMC,YAAY,GAAG;AACnB;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,KAJU;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfH,EAAAA,OAFe;AAGfI,EAAAA,OAHe;AAIfC,EAAAA,IAJe;AAKfC,EAAAA,IALe;AAMfC,EAAAA,QANe;AAOfN,EAAAA,QAPe;AAQfO,EAAAA,OARe;AASf,KAAGC;AATY,CAAD,KAUV;AACJ,QAAMC,UAAU,GACdZ,WAAW,GACX,GADA,IAECG,QAAQ,KAAK,IAAb,GAAoBN,aAApB,GAAoCC,aAAa,CAACQ,OAAD,CAFlD,IAGA,GAHA,GAIAP,UAAU,CAACQ,IAAD,CAJV,GAKA,GALA,GAMAF,SAPF;;AASA,QAAMQ,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAIX,QAAQ,IAAID,OAAhB,EAAyB;AACzBQ,IAAAA,OAAO,IAAIA,OAAO,CAACI,KAAD,CAAlB;AACD,GAHD;;AAKA,sBACE;AACE,IAAA,OAAO,EAAED,cADX;AAEE,IAAA,SAAS,EAAED,UAFb;AAGE,IAAA,QAAQ,EAAET,QAHZ;AAIE,IAAA,IAAI,EAAEK,IAJR;AAKE,kBAAYA,IALd;AAAA,OAMMG,KANN;AAAA,eAQG,CAACT,OAAD,IAAYO,QARf,EASGP,OAAO,iBACN;AACE,MAAA,SAAS,EAAC,uEADZ;AAEE,MAAA,KAAK,EAAE;AAAEa,QAAAA,cAAc,EAAE;AAAlB;AAFT;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3CD;;KAAMX,O;AA6CNA,OAAO,CAACH,YAAR,GAAuBA,YAAvB;AAEA,eAAeG,OAAf","sourcesContent":["import React from \"react\";\n// import { ButtonVariants, ButtonSizes } from \"./../utils/prop-types\";\nimport {\n  ButtonDisable,\n  ButtonVariant,\n  ButtonSize,\n  ButtonBase2,\n} from \"./../utils/theme\";\n\nconst defaultProps = {\n  //   variant: \"primary\" as ButtonVariants,\n  //   size: \"normal\" as ButtonSizes,\n  //   type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n  loading: false,\n  disabled: false,\n};\n\nconst Button2 = ({\n  className,\n  loading,\n  variant,\n  size,\n  type,\n  children,\n  disabled,\n  onClick,\n  ...props\n}) => {\n  const classNames =\n    ButtonBase2 +\n    \" \" +\n    (disabled === true ? ButtonDisable : ButtonVariant[variant]) +\n    \" \" +\n    ButtonSize[size] +\n    \" \" +\n    className;\n\n  const onClickHandler = (event) => {\n    if (disabled || loading) return;\n    onClick && onClick(event);\n  };\n\n  return (\n    <button\n      onClick={onClickHandler}\n      className={classNames}\n      disabled={disabled}\n      type={type}\n      aria-label={type}\n      {...props}\n    >\n      {!loading && children}\n      {loading && (\n        <div\n          className=\"h-5 w-5 border-2 border-gray-400 border-t-2 rounded-full animate-spin\"\n          style={{ borderTopColor: \"#000101\" }}\n        />\n      )}\n    </button>\n  );\n};\n\nButton2.defaultProps = defaultProps;\n\nexport default Button2;\n"]},"metadata":{},"sourceType":"module"}